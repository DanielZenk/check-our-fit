(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{384:function(e,t,a){"use strict";a.r(t),a.d(t,"Browse",(function(){return O}));var n=a(0),r=a.n(n),l=a(354),c=a(197),i=a(365),o=a(385),u=a(198),s=a(199),m=a(360),p=a(366),d=a(201),f=a.n(d),h=a(200),E=a.n(h),g=(a(190),a(320)),b=function(e){var t=e.images;return r.a.createElement(g.a,null,t.map((function(e){return r.a.createElement("div",null,r.a.createElement("img",{src:e,alt:"temp"}))})))},w=r.a.lazy((function(){return Promise.all([a.e(2),a.e(7),a.e(8)]).then(a.bind(null,370)).then((function(e){return{default:e.Questionnaire}}))})),v=Object(l.a)({card:{width:"95%",margin:"auto",marginBottom:"5px"},expandIcon:{marginLeft:"85%"}}),x=function(e){var t=e.post,a=Object(n.useState)(!1),l=a[0],d=a[1],h=["https://picsum.photos/id/1018/1000/600/","https://picsum.photos/id/1018/1000/600/","https://picsum.photos/id/1018/1000/600/"],g=v();return r.a.createElement(r.a.Fragment,null,t?r.a.createElement(c.a,{className:g.card},r.a.createElement(i.a,{avatar:r.a.createElement(o.a,{alt:t.handle,src:t.userImage}),title:"Need to add title",subheader:t.createdAt}),r.a.createElement(u.a,null,r.a.createElement(b,{images:h})),r.a.createElement(s.a,{disableSpacing:!0},r.a.createElement(m.a,{className:g.expandIcon,onClick:function(){return d(!l)}},l?r.a.createElement(E.a,null):r.a.createElement(f.a,null))),r.a.createElement(p.a,{in:l},r.a.createElement(u.a,null,r.a.createElement(n.Suspense,{fallback:r.a.createElement("h3",null,"Questions being loaded...")},r.a.createElement(w,{questions:t.questions}))))):null)},j=Object(l.a)({root:{flexGrow:1},leftPaper:{marginTop:"5px",marginLeft:"4px",height:"97%"},rightPaper:{marginTop:"5px",marginLeft:"4px",height:"97%"}}),O=function(){var e=j(),t=Object(n.useState)(void 0),a=t[0],l=t[1];Object(n.useEffect)((function(){a||fetch("/posts").then((function(e){return e.json()})).then((function(e){l(e),console.log(a)}))}));return r.a.createElement("div",{className:e.root},a?a.map((function(e){return r.a.createElement(x,{post:e})})):r.a.createElement("h1",null,"Loading posts..."))}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,